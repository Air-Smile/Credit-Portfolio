// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2018-10-30 02:24:25.3128231 +0500 +05 m=+0.042855901

package docs

import (
	"bytes"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "info": {
        "contact": {},
        "license": {}
    },
    "paths": {
        "/advertisers": {
            "get": {
                "description": "Метод возвращает список всех имеющихся в системе рекламодателей",
                "produces": [
                    "application/json"
                ],
                "summary": "Получить список всех рекламодателей",
                "responses": {
                    "200": {
                        "description": "{\"advertisers\":[],\"count\":0,\"status\":\"OK\"}"
                    }
                }
            },
            "post": {
                "description": "Метод добавляет в систему нового рекламодателя с заданными параметрами",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Добавить нового рекламодателя",
                "parameters": [
                    {
                        "description": "Данные о рекламодателе",
                        "name": "advertiser",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/entities.Advertiser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"advertiser\": entities.Advertiser}",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/entities.Advertiser"
                        }
                    }
                }
            }
        },
        "/advertisers/{id}": {
            "get": {
                "description": "Метод возвращает рекламодателя по его ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Получить рекламодателя по ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID рекламодателя",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"advertiser\": entities.Advertiser}",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/entities.Advertiser"
                        }
                    },
                    "404": {
                        "description": "{\"message\": \"resource not found\"}"
                    }
                }
            }
        }
    },
    "definitions": {
        "entities.Advertiser": {
            "type": "object",
            "properties": {
                "IsActive": {
                    "type": "boolean"
                },
                "contactInfo": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "notes": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo swaggerInfo

type s struct{}

func (s *s) ReadDoc() string {
	t, err := template.New("swagger_info").Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, SwaggerInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
