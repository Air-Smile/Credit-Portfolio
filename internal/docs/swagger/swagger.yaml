basePath: '{{.BasePath}}'
definitions:
  entities.Advertisement:
    properties:
      advertiserId:
        type: integer
      banners:
        items:
          $ref: '#/definitions/entities.Banner'
        type: array
      createdAt:
        type: string
      id:
        type: integer
      isActive:
        type: boolean
      title:
        type: string
      updatedAt:
        type: string
    type: object
  entities.Advertiser:
    properties:
      contactInfo:
        type: string
      createdAt:
        example: "2018-10-30T19:43:15.251038Z"
        type: string
      email:
        type: string
      id:
        type: integer
      isActive:
        type: boolean
      notes:
        type: string
      password:
        type: string
      role:
        type: integer
      updatedAt:
        example: "2018-10-30T19:43:15.251038Z"
        type: string
      username:
        type: string
    type: object
  entities.Banner:
    properties:
      advertisementId:
        type: integer
      bannerPlaceId:
        type: integer
      createdAt:
        type: string
      id:
        type: integer
      isVisible:
        type: boolean
      pictureUrl:
        type: string
      text:
        type: string
      uniqueViews:
        type: integer
      uniqueViewsRequired:
        type: integer
      updatedAt:
        type: string
      views:
        type: integer
    type: object
  requests.NewAdvertisement:
    properties:
      advertiserId:
        type: integer
      isActive:
        type: boolean
      title:
        type: string
    required:
      - advertiserId
      - isActive
      - title
    type: object
  requests.NewAdvertiser:
    properties:
      contactInfo:
        type: string
      email:
        type: string
      isActive:
        type: boolean
      notes:
        type: string
      password:
        type: string
      username:
        type: string
    required:
      - email
      - isActive
      - password
      - username
    type: object
  requests.UpdateAdvertisement:
    properties:
      isActive:
        type: boolean
      title:
        type: string
    type: object
  requests.UpdateAdvertiser:
    properties:
      contactInfo:
        type: string
      email:
        type: string
      isActive:
        type: boolean
      notes:
        type: string
      username:
        type: string
    type: object
  responses.AllAdvertisements:
    properties:
      advertisements:
        items:
          $ref: '#/definitions/entities.Advertisement'
        type: array
      count:
        example: 0
        type: integer
      status:
        example: OK
        type: string
    type: object
  responses.AllAdvertisers:
    properties:
      advertisers:
        items:
          $ref: '#/definitions/entities.Advertiser'
        type: array
      count:
        example: 0
        type: integer
      status:
        example: OK
        type: string
    type: object
  responses.OneAdvertisement:
    properties:
      Advertisement:
        $ref: '#/definitions/entities.Advertisement'
        type: object
    type: object
  responses.OneAdvertiser:
    properties:
      advertiser:
        $ref: '#/definitions/entities.Advertiser'
        type: object
    type: object
  responses.UserStat:
    properties:
      count:
        type: integer
      status:
        type: string
    type: object
host: '{{.Host}}'
info:
  contact: {}
  description: Документация по методам API приложения "Кредитный портфель"
  license: {}
  title: Loan Portfolio API doc
  version: "0.5"
paths:
  /partners:
    get:
      description: Метод возвращает список всех имеющихся в системе рекламодателей
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.AllAdvertisers'
            type: object
      summary: Получить список всех рекламодателей
      tags:
        - Advertisers
    post:
      consumes:
        - application/json
      description: Метод добавляет в систему нового рекламодателя с заданными параметрами
      parameters:
        - description: Данные о рекламодателе
          in: body
          name: advertiser
          required: true
          schema:
            $ref: '#/definitions/requests.NewAdvertiser'
            type: object
      produces:
        - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/responses.OneAdvertiser'
            type: object
      summary: Добавить нового рекламодателя
      tags:
        - Advertisers
  /partners/{id}:
    delete:
      description: Метод удаляет из системы рекламодателя с заданным ID
      parameters:
        - description: ID рекламодателя
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "200": {}
        "422": {}
      summary: Удалить рекламодателя
      tags:
        - Advertisers
    get:
      description: Метод возвращает рекламодателя по его ID
      parameters:
        - description: ID рекламодателя
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.OneAdvertiser'
            type: object
        "404":
          description: '{"message": "resource not found"}'
        "422": {}
      summary: Получить рекламодателя по ID
      tags:
        - Advertisers
    put:
      consumes:
        - application/json
      description: Метод обновляет рекламодателя заданными параметрами по ID
      parameters:
        - description: ID рекламодателя
          in: path
          name: id
          required: true
          type: integer
        - description: Новые данные о рекламодателе
          in: body
          name: advertiser
          required: true
          schema:
            $ref: '#/definitions/requests.UpdateAdvertiser'
            type: object
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.OneAdvertiser'
            type: object
        "404": {}
        "422": {}
      summary: Обновить рекламодателя
      tags:
        - Advertisers
  /partners/{id}/promotions:
    get:
      description: Метод возвращает данные о рекламных объявлениях рекламодателя с
        заданным ID
      parameters:
        - description: ID рекламодателя
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.AllAdvertisements'
            type: object
        "422": {}
      summary: Получить рекламные объявления рекламодателя
      tags:
        - Advertisements
  /promotions:
    get:
      description: Метод возвращает данные о всех рекламных объявлениях
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.AllAdvertisements'
            type: object
        "422": {}
      summary: Получить вообще все рекламные объявления
      tags:
        - Advertisements
    post:
      consumes:
        - application/json
      description: Метод добавляет новое рекламне объявление с заданными параметрами
      parameters:
        - description: Данные о рекламном объявлении
          in: body
          name: advertisement
          required: true
          schema:
            $ref: '#/definitions/requests.NewAdvertisement'
            type: object
      produces:
        - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/responses.OneAdvertisement'
            type: object
      summary: Добавить рекламное объявление
      tags:
        - Advertisements
  /promotions/{id}:
    delete:
      description: Метод удаляет рекламне объявление с заданным ID
      parameters:
        - description: ID рекламного объявления
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "200": {}
        "422": {}
      summary: Удалить рекламное объявление
      tags:
        - Advertisements
    get:
      description: Метод возвращает данные рекламном объявлении с данным ID
      parameters:
        - description: ID рекламного объявления
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.OneAdvertisement'
            type: object
        "404": {}
        "422": {}
      summary: Получить рекламное объявление по ID
      tags:
        - Advertisements
    put:
      consumes:
        - application/json
      description: Метод обновляет рекламне объявление с заданным ID
      parameters:
        - description: ID рекламного объявления
          in: path
          name: id
          required: true
          type: integer
        - description: Новые данные о рекламном объявлении
          in: body
          name: advertisement
          required: true
          schema:
            $ref: '#/definitions/requests.UpdateAdvertisement'
            type: object
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.OneAdvertisement'
            type: object
        "404": {}
        "422": {}
      summary: Обновить рекламное объявление
      tags:
        - Advertisements
  /stats/users/registered:
    get:
      description: Метод возвращает число новых пользователей за данный период
      parameters:
        - description: Начало периода
          in: query
          name: from
          type: string
        - description: Конец периода
          in: query
          name: to
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.UserStat'
            type: object
        "422": {}
      summary: Получить количество зарегистрированных за данный период пользователей
      tags:
        - Statistics
swagger: "2.0"
